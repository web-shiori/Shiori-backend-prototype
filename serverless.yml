app: web-shiori-backend-prototype
service: web-shiori-backend-prototype
plugins:
  - serverless-dynamodb-local
  - serverless-offline

provider:
  name: aws
  runtime: go1.x
  region: ap-northeast-1
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}, arn:aws:cognito-idp:*:*:userpool/*"

functions:
  alive:
    handler: bin/alive
    package:
      include:
        - ./bin/alive
    events:
      - http:
          path: alive
          method: get
          cors: true
          authorizer:
            name: alive
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization

  post:
    handler: bin/post
    package:
      include:
        - ./bin/post
    events:
      - http:
          path: post
          method: post
          cors: true

resources:
  Resources:
    ContentDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
